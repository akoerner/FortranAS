(program (executableProgram (programUnit (mainProgram (programStmt program program10) mainRange)) (programUnit (mainProgram (mainRange integer :: result result =))) (programUnit (mainProgram mainRange)) (programUnit (mainProgram (mainRange factorial ())) (programUnit (mainProgram mainRange)) (programUnit (mainProgram (mainRange 5 )))) (programUnit (mainProgram mainRange)) (programUnit (mainProgram (mainRange print * , 'Factorial of 5:' , result))) (programUnit (mainProgram (mainRange (bodyPlusInternals (containsStmt contains) (internalSubprogram (functionSubprogram (functionPrefix (recursive recursive) function) (functionName factorial) (functionRange (functionParList ( (functionPars (functionPar (dummyArgName n))) )) result ( res ) (body (bodyConstruct (specificationPartConstruct (declarationConstruct (typeDeclarationStmt (typeSpec integer) (attrSpecSeq , (attrSpec intent ( (intentSpec in) ))) :: (entityDeclList (entityDecl (objectName n))))))) (bodyConstruct (specificationPartConstruct (declarationConstruct (typeDeclarationStmt (typeSpec integer) :: (entityDeclList (entityDecl (objectName res))))))) (bodyConstruct (executableConstruct (ifConstruct (ifThenStmt if ( (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (nameDataRef n))))))) (relOp ==) (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (unsignedArithmeticConstant 0))))))))))))) ) then) (conditionalBody (executionPartConstruct (executableConstruct (actionStmt (assignmentStmt res = (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (unsignedArithmeticConstant 1)))))))))))))))))) (elseConstruct (elseStmt else) (conditionalBody (executionPartConstruct (executableConstruct (actionStmt (assignmentStmt res = (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (nameDataRef n)))) * (multOperand (level1Expr (primary (nameDataRef factorial (complexDataRefTail (sectionSubscriptRef ( (sectionSubscriptList (sectionSubscript (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (nameDataRef n))))) - (addOperand (multOperand (level1Expr (primary (unsignedArithmeticConstant 1))))))))))))))) )))))))))))))))))))))) (endIfStmt end if))))) (endFunctionStmt end function factorial))))) (endProgramStmt end program program10))))) <EOF>)
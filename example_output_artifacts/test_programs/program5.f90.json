{
  "fortranSourceFile": "source/fortran_code_samples/test_programs/program5.f90",
  "tokenEndNumber": 64,
  "antlr4ParseTreeString": "(program (executableProgram (programUnit (mainProgram (programStmt program program5) (mainRange (body (bodyConstruct (specificationPartConstruct (declarationConstruct (typeDeclarationStmt (typeSpec integer) :: (entityDeclList (entityDecl (objectName a)) , (entityDecl (objectName b))))))) (bodyConstruct (executableConstruct (actionStmt (assignmentStmt a \u003d (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (unsignedArithmeticConstant 10))))))))))))))))) (bodyConstruct (executableConstruct (actionStmt (assignmentStmt b \u003d (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (unsignedArithmeticConstant 20))))))))))))))))) (bodyConstruct (executableConstruct (ifConstruct (ifThenStmt if ( (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (nameDataRef a))))))) (relOp \u003e) (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (nameDataRef b))))))))))))) ) then) (conditionalBody (executionPartConstruct (executableConstruct (actionStmt (printStmt print (formatIdentifier *) , (outputItemList (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary \u0027a is greater than b\u0027)))))))))))))))))) (elseConstruct (elseStmt else) (conditionalBody (executionPartConstruct (executableConstruct (actionStmt (printStmt print (formatIdentifier *) , (outputItemList (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary \u0027b is greater than a\u0027))))))))))))))))))) (endIfStmt end if))))) (endProgramStmt end program program5))))) \u003cEOF\u003e)",
  "tokenStartNumber": 1,
  "lexerClassName": "Fortran90Lexer",
  "endLineNumber": 16,
  "tokensString": "[@0,0:34\u003d\u0027! Program 5: Conditional Statement\\n\u0027,\u003c120\u003e,channel\u003d1,1:0]\n[@1,35:41\u003d\u0027program\u0027,\u003c5\u003e,2:0]\n[@2,42:42\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,2:7]\n[@3,43:50\u003d\u0027program5\u0027,\u003c189\u003e,2:8]\n[@4,51:53\u003d\u0027\\n  \u0027,\u003c119\u003e,channel\u003d1,2:16]\n[@5,54:60\u003d\u0027integer\u0027,\u003c169\u003e,3:2]\n[@6,61:61\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,3:9]\n[@7,62:63\u003d\u0027::\u0027,\u003c30\u003e,3:10]\n[@8,64:64\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,3:12]\n[@9,65:65\u003d\u0027a\u0027,\u003c189\u003e,3:13]\n[@10,66:66\u003d\u0027,\u0027,\u003c122\u003e,3:14]\n[@11,67:67\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,3:15]\n[@12,68:68\u003d\u0027b\u0027,\u003c189\u003e,3:16]\n[@13,69:72\u003d\u0027\\n\\n  \u0027,\u003c119\u003e,channel\u003d1,3:17]\n[@14,73:73\u003d\u0027a\u0027,\u003c189\u003e,5:2]\n[@15,74:74\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,5:3]\n[@16,75:75\u003d\u0027\u003d\u0027,\u003c131\u003e,5:4]\n[@17,76:76\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,5:5]\n[@18,77:78\u003d\u002710\u0027,\u003c187\u003e,5:6]\n[@19,79:81\u003d\u0027\\n  \u0027,\u003c119\u003e,channel\u003d1,5:8]\n[@20,82:82\u003d\u0027b\u0027,\u003c189\u003e,6:2]\n[@21,83:83\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,6:3]\n[@22,84:84\u003d\u0027\u003d\u0027,\u003c131\u003e,6:4]\n[@23,85:85\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,6:5]\n[@24,86:87\u003d\u002720\u0027,\u003c187\u003e,6:6]\n[@25,88:91\u003d\u0027\\n\\n  \u0027,\u003c119\u003e,channel\u003d1,6:8]\n[@26,92:93\u003d\u0027if\u0027,\u003c51\u003e,8:2]\n[@27,94:94\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,8:4]\n[@28,95:95\u003d\u0027(\u0027,\u003c123\u003e,8:5]\n[@29,96:96\u003d\u0027a\u0027,\u003c189\u003e,8:6]\n[@30,97:97\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,8:7]\n[@31,98:98\u003d\u0027\u003e\u0027,\u003c28\u003e,8:8]\n[@32,99:99\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,8:9]\n[@33,100:100\u003d\u0027b\u0027,\u003c189\u003e,8:10]\n[@34,101:101\u003d\u0027)\u0027,\u003c128\u003e,8:11]\n[@35,102:102\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,8:12]\n[@36,103:106\u003d\u0027then\u0027,\u003c52\u003e,8:13]\n[@37,107:111\u003d\u0027\\n    \u0027,\u003c119\u003e,channel\u003d1,8:17]\n[@38,112:116\u003d\u0027print\u0027,\u003c74\u003e,9:4]\n[@39,117:117\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,9:9]\n[@40,118:118\u003d\u0027*\u0027,\u003c193\u003e,9:10]\n[@41,119:119\u003d\u0027,\u0027,\u003c122\u003e,9:11]\n[@42,120:120\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,9:12]\n[@43,121:141\u003d\u0027\u0027a is greater than b\u0027\u0027,\u003c178\u003e,9:13]\n[@44,142:144\u003d\u0027\\n  \u0027,\u003c119\u003e,channel\u003d1,9:34]\n[@45,145:148\u003d\u0027else\u0027,\u003c53\u003e,10:2]\n[@46,149:153\u003d\u0027\\n    \u0027,\u003c119\u003e,channel\u003d1,10:6]\n[@47,154:158\u003d\u0027print\u0027,\u003c74\u003e,11:4]\n[@48,159:159\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,11:9]\n[@49,160:160\u003d\u0027*\u0027,\u003c193\u003e,11:10]\n[@50,161:161\u003d\u0027,\u0027,\u003c122\u003e,11:11]\n[@51,162:162\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,11:12]\n[@52,163:183\u003d\u0027\u0027b is greater than a\u0027\u0027,\u003c178\u003e,11:13]\n[@53,184:186\u003d\u0027\\n  \u0027,\u003c119\u003e,channel\u003d1,11:34]\n[@54,187:189\u003d\u0027end\u0027,\u003c12\u003e,12:2]\n[@55,190:190\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,12:5]\n[@56,191:192\u003d\u0027if\u0027,\u003c51\u003e,12:6]\n[@57,193:193\u003d\u0027\\n\u0027,\u003c119\u003e,channel\u003d1,12:8]\n[@58,194:196\u003d\u0027end\u0027,\u003c12\u003e,13:0]\n[@59,197:197\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,13:3]\n[@60,198:204\u003d\u0027program\u0027,\u003c5\u003e,13:4]\n[@61,205:205\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,13:11]\n[@62,206:213\u003d\u0027program5\u0027,\u003c189\u003e,13:12]\n[@63,214:216\u003d\u0027\\n\\n\\n\u0027,\u003c119\u003e,channel\u003d1,13:20]\n[@64,217:216\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,16:0]\n",
  "tokenCount": 65,
  "tokens": [
    {
      "type": 120,
      "text": "! Program 5: Conditional Statement\n",
      "start": 0,
      "stop": 34
    },
    {
      "type": 5,
      "text": "program",
      "start": 35,
      "stop": 41
    },
    {
      "type": 119,
      "text": " ",
      "start": 42,
      "stop": 42
    },
    {
      "type": 189,
      "text": "program5",
      "start": 43,
      "stop": 50
    },
    {
      "type": 119,
      "text": "\n  ",
      "start": 51,
      "stop": 53
    },
    {
      "type": 169,
      "text": "integer",
      "start": 54,
      "stop": 60
    },
    {
      "type": 119,
      "text": " ",
      "start": 61,
      "stop": 61
    },
    {
      "type": 30,
      "text": "::",
      "start": 62,
      "stop": 63
    },
    {
      "type": 119,
      "text": " ",
      "start": 64,
      "stop": 64
    },
    {
      "type": 189,
      "text": "a",
      "start": 65,
      "stop": 65
    },
    {
      "type": 122,
      "text": ",",
      "start": 66,
      "stop": 66
    },
    {
      "type": 119,
      "text": " ",
      "start": 67,
      "stop": 67
    },
    {
      "type": 189,
      "text": "b",
      "start": 68,
      "stop": 68
    },
    {
      "type": 119,
      "text": "\n\n  ",
      "start": 69,
      "stop": 72
    },
    {
      "type": 189,
      "text": "a",
      "start": 73,
      "stop": 73
    },
    {
      "type": 119,
      "text": " ",
      "start": 74,
      "stop": 74
    },
    {
      "type": 131,
      "text": "\u003d",
      "start": 75,
      "stop": 75
    },
    {
      "type": 119,
      "text": " ",
      "start": 76,
      "stop": 76
    },
    {
      "type": 187,
      "text": "10",
      "start": 77,
      "stop": 78
    },
    {
      "type": 119,
      "text": "\n  ",
      "start": 79,
      "stop": 81
    },
    {
      "type": 189,
      "text": "b",
      "start": 82,
      "stop": 82
    },
    {
      "type": 119,
      "text": " ",
      "start": 83,
      "stop": 83
    },
    {
      "type": 131,
      "text": "\u003d",
      "start": 84,
      "stop": 84
    },
    {
      "type": 119,
      "text": " ",
      "start": 85,
      "stop": 85
    },
    {
      "type": 187,
      "text": "20",
      "start": 86,
      "stop": 87
    },
    {
      "type": 119,
      "text": "\n\n  ",
      "start": 88,
      "stop": 91
    },
    {
      "type": 51,
      "text": "if",
      "start": 92,
      "stop": 93
    },
    {
      "type": 119,
      "text": " ",
      "start": 94,
      "stop": 94
    },
    {
      "type": 123,
      "text": "(",
      "start": 95,
      "stop": 95
    },
    {
      "type": 189,
      "text": "a",
      "start": 96,
      "stop": 96
    },
    {
      "type": 119,
      "text": " ",
      "start": 97,
      "stop": 97
    },
    {
      "type": 28,
      "text": "\u003e",
      "start": 98,
      "stop": 98
    },
    {
      "type": 119,
      "text": " ",
      "start": 99,
      "stop": 99
    },
    {
      "type": 189,
      "text": "b",
      "start": 100,
      "stop": 100
    },
    {
      "type": 128,
      "text": ")",
      "start": 101,
      "stop": 101
    },
    {
      "type": 119,
      "text": " ",
      "start": 102,
      "stop": 102
    },
    {
      "type": 52,
      "text": "then",
      "start": 103,
      "stop": 106
    },
    {
      "type": 119,
      "text": "\n    ",
      "start": 107,
      "stop": 111
    },
    {
      "type": 74,
      "text": "print",
      "start": 112,
      "stop": 116
    },
    {
      "type": 119,
      "text": " ",
      "start": 117,
      "stop": 117
    },
    {
      "type": 193,
      "text": "*",
      "start": 118,
      "stop": 118
    },
    {
      "type": 122,
      "text": ",",
      "start": 119,
      "stop": 119
    },
    {
      "type": 119,
      "text": " ",
      "start": 120,
      "stop": 120
    },
    {
      "type": 178,
      "text": "\u0027a is greater than b\u0027",
      "start": 121,
      "stop": 141
    },
    {
      "type": 119,
      "text": "\n  ",
      "start": 142,
      "stop": 144
    },
    {
      "type": 53,
      "text": "else",
      "start": 145,
      "stop": 148
    },
    {
      "type": 119,
      "text": "\n    ",
      "start": 149,
      "stop": 153
    },
    {
      "type": 74,
      "text": "print",
      "start": 154,
      "stop": 158
    },
    {
      "type": 119,
      "text": " ",
      "start": 159,
      "stop": 159
    },
    {
      "type": 193,
      "text": "*",
      "start": 160,
      "stop": 160
    },
    {
      "type": 122,
      "text": ",",
      "start": 161,
      "stop": 161
    },
    {
      "type": 119,
      "text": " ",
      "start": 162,
      "stop": 162
    },
    {
      "type": 178,
      "text": "\u0027b is greater than a\u0027",
      "start": 163,
      "stop": 183
    },
    {
      "type": 119,
      "text": "\n  ",
      "start": 184,
      "stop": 186
    },
    {
      "type": 12,
      "text": "end",
      "start": 187,
      "stop": 189
    },
    {
      "type": 119,
      "text": " ",
      "start": 190,
      "stop": 190
    },
    {
      "type": 51,
      "text": "if",
      "start": 191,
      "stop": 192
    },
    {
      "type": 119,
      "text": "\n",
      "start": 193,
      "stop": 193
    },
    {
      "type": 12,
      "text": "end",
      "start": 194,
      "stop": 196
    },
    {
      "type": 119,
      "text": " ",
      "start": 197,
      "stop": 197
    },
    {
      "type": 5,
      "text": "program",
      "start": 198,
      "stop": 204
    },
    {
      "type": 119,
      "text": " ",
      "start": 205,
      "stop": 205
    },
    {
      "type": 189,
      "text": "program5",
      "start": 206,
      "stop": 213
    },
    {
      "type": 119,
      "text": "\n\n\n",
      "start": 214,
      "stop": 216
    },
    {
      "type": -1,
      "text": "\u003cEOF\u003e",
      "start": 217,
      "stop": 216
    }
  ],
  "startLineNumber": 2,
  "parserClassName": "Fortran90Parser"
}
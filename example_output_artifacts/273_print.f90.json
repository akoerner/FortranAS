{
  "fortranSourceFile": "source/fortran_code_samples/273_print.f90",
  "tokenEndNumber": 34,
  "antlr4ParseTreeString": "(program (executableProgram (programUnit (mainProgram (programStmt program p2_7_3) (mainRange (body (bodyConstruct (specificationPartConstruct (implicitStmt implicit none))) (bodyConstruct (executableConstruct (actionStmt (writeStmt write ( (ioControlSpecList (unitIdentifier *) , (formatIdentifier *)) ) (outputItemList (outputItemList1 (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary \u0027The result of 2 * 7 + 3 is:\u0027)))))))))))) , (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (unsignedArithmeticConstant 2)))) * (multOperand (level1Expr (primary (unsignedArithmeticConstant 7))))) + (addOperand (multOperand (level1Expr (primary (unsignedArithmeticConstant 3)))))))))))))))))))) (endProgramStmt end program p2_7_3))))) \u003cEOF\u003e)",
  "tokenStartNumber": 0,
  "lexerClassName": "Fortran90Lexer",
  "endLineNumber": 5,
  "tokensString": "[@0,0:6\u003d\u0027program\u0027,\u003c5\u003e,1:0]\n[@1,7:7\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,1:7]\n[@2,8:13\u003d\u0027p2_7_3\u0027,\u003c189\u003e,1:8]\n[@3,14:17\u003d\u0027 \\n  \u0027,\u003c119\u003e,channel\u003d1,1:14]\n[@4,18:25\u003d\u0027implicit\u0027,\u003c41\u003e,2:2]\n[@5,26:26\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,2:10]\n[@6,27:30\u003d\u0027none\u0027,\u003c42\u003e,2:11]\n[@7,31:33\u003d\u0027\\n  \u0027,\u003c119\u003e,channel\u003d1,2:15]\n[@8,34:38\u003d\u0027write\u0027,\u003c72\u003e,3:2]\n[@9,39:39\u003d\u0027(\u0027,\u003c123\u003e,3:7]\n[@10,40:40\u003d\u0027*\u0027,\u003c193\u003e,3:8]\n[@11,41:41\u003d\u0027,\u0027,\u003c122\u003e,3:9]\n[@12,42:42\u003d\u0027*\u0027,\u003c193\u003e,3:10]\n[@13,43:43\u003d\u0027)\u0027,\u003c128\u003e,3:11]\n[@14,44:44\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,3:12]\n[@15,45:73\u003d\u0027\u0027The result of 2 * 7 + 3 is:\u0027\u0027,\u003c178\u003e,3:13]\n[@16,74:74\u003d\u0027,\u0027,\u003c122\u003e,3:42]\n[@17,75:75\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,3:43]\n[@18,76:76\u003d\u00272\u0027,\u003c187\u003e,3:44]\n[@19,77:77\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,3:45]\n[@20,78:78\u003d\u0027*\u0027,\u003c193\u003e,3:46]\n[@21,79:79\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,3:47]\n[@22,80:80\u003d\u00277\u0027,\u003c187\u003e,3:48]\n[@23,81:81\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,3:49]\n[@24,82:82\u003d\u0027+\u0027,\u003c133\u003e,3:50]\n[@25,83:83\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,3:51]\n[@26,84:84\u003d\u00273\u0027,\u003c187\u003e,3:52]\n[@27,85:85\u003d\u0027\\n\u0027,\u003c119\u003e,channel\u003d1,3:53]\n[@28,86:88\u003d\u0027end\u0027,\u003c12\u003e,4:0]\n[@29,89:89\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,4:3]\n[@30,90:96\u003d\u0027program\u0027,\u003c5\u003e,4:4]\n[@31,97:97\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,4:11]\n[@32,98:103\u003d\u0027p2_7_3\u0027,\u003c189\u003e,4:12]\n[@33,104:105\u003d\u0027 \\n\u0027,\u003c119\u003e,channel\u003d1,4:18]\n[@34,106:105\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,5:0]\n",
  "tokenCount": 35,
  "tokens": [
    {
      "type": 5,
      "text": "program",
      "start": 0,
      "stop": 6
    },
    {
      "type": 119,
      "text": " ",
      "start": 7,
      "stop": 7
    },
    {
      "type": 189,
      "text": "p2_7_3",
      "start": 8,
      "stop": 13
    },
    {
      "type": 119,
      "text": " \n  ",
      "start": 14,
      "stop": 17
    },
    {
      "type": 41,
      "text": "implicit",
      "start": 18,
      "stop": 25
    },
    {
      "type": 119,
      "text": " ",
      "start": 26,
      "stop": 26
    },
    {
      "type": 42,
      "text": "none",
      "start": 27,
      "stop": 30
    },
    {
      "type": 119,
      "text": "\n  ",
      "start": 31,
      "stop": 33
    },
    {
      "type": 72,
      "text": "write",
      "start": 34,
      "stop": 38
    },
    {
      "type": 123,
      "text": "(",
      "start": 39,
      "stop": 39
    },
    {
      "type": 193,
      "text": "*",
      "start": 40,
      "stop": 40
    },
    {
      "type": 122,
      "text": ",",
      "start": 41,
      "stop": 41
    },
    {
      "type": 193,
      "text": "*",
      "start": 42,
      "stop": 42
    },
    {
      "type": 128,
      "text": ")",
      "start": 43,
      "stop": 43
    },
    {
      "type": 119,
      "text": " ",
      "start": 44,
      "stop": 44
    },
    {
      "type": 178,
      "text": "\u0027The result of 2 * 7 + 3 is:\u0027",
      "start": 45,
      "stop": 73
    },
    {
      "type": 122,
      "text": ",",
      "start": 74,
      "stop": 74
    },
    {
      "type": 119,
      "text": " ",
      "start": 75,
      "stop": 75
    },
    {
      "type": 187,
      "text": "2",
      "start": 76,
      "stop": 76
    },
    {
      "type": 119,
      "text": " ",
      "start": 77,
      "stop": 77
    },
    {
      "type": 193,
      "text": "*",
      "start": 78,
      "stop": 78
    },
    {
      "type": 119,
      "text": " ",
      "start": 79,
      "stop": 79
    },
    {
      "type": 187,
      "text": "7",
      "start": 80,
      "stop": 80
    },
    {
      "type": 119,
      "text": " ",
      "start": 81,
      "stop": 81
    },
    {
      "type": 133,
      "text": "+",
      "start": 82,
      "stop": 82
    },
    {
      "type": 119,
      "text": " ",
      "start": 83,
      "stop": 83
    },
    {
      "type": 187,
      "text": "3",
      "start": 84,
      "stop": 84
    },
    {
      "type": 119,
      "text": "\n",
      "start": 85,
      "stop": 85
    },
    {
      "type": 12,
      "text": "end",
      "start": 86,
      "stop": 88
    },
    {
      "type": 119,
      "text": " ",
      "start": 89,
      "stop": 89
    },
    {
      "type": 5,
      "text": "program",
      "start": 90,
      "stop": 96
    },
    {
      "type": 119,
      "text": " ",
      "start": 97,
      "stop": 97
    },
    {
      "type": 189,
      "text": "p2_7_3",
      "start": 98,
      "stop": 103
    },
    {
      "type": 119,
      "text": " \n",
      "start": 104,
      "stop": 105
    },
    {
      "type": -1,
      "text": "\u003cEOF\u003e",
      "start": 106,
      "stop": 105
    }
  ],
  "startLineNumber": 1,
  "parserClassName": "Fortran90Parser"
}
{
  "fortranSourceFile": "source/fortran_code_samples/fibonacci.f90",
  "tokenEndNumber": 101,
  "antlr4ParseTreeString": "(program (executableProgram (programUnit (module (moduleStmt module (moduleName (ident fibonacci_module))) (moduleBody (moduleBody (moduleBody (specificationPartConstruct (implicitStmt implicit none))) (moduleSubprogramPartConstruct (containsStmt contains))) (moduleSubprogramPartConstruct (moduleSubprogram (functionSubprogram (functionPrefix (recursive recursive) function) (functionName fibonacci) (functionRange (functionParList ( (functionPars (functionPar (dummyArgName n))) )) result ( fib ) (body (bodyConstruct (specificationPartConstruct (declarationConstruct (typeDeclarationStmt (typeSpec integer) (attrSpecSeq , (attrSpec intent ( (intentSpec in) ))) :: (entityDeclList (entityDecl (objectName n))))))) (bodyConstruct (specificationPartConstruct (declarationConstruct (typeDeclarationStmt (typeSpec integer) :: (entityDeclList (entityDecl (objectName fib))))))) (bodyConstruct (executableConstruct (ifConstruct (ifThenStmt if ( (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (nameDataRef n))))))) (relOp \u003c) (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (unsignedArithmeticConstant 2))))))))))))) ) then) (conditionalBody (executionPartConstruct (executableConstruct (actionStmt (assignmentStmt fib \u003d (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (nameDataRef n)))))))))))))))))) (elseConstruct (elseStmt else) (conditionalBody (executionPartConstruct (executableConstruct (actionStmt (assignmentStmt fib \u003d (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (nameDataRef fibonacci (complexDataRefTail (sectionSubscriptRef ( (sectionSubscriptList (sectionSubscript (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (nameDataRef n))))) - (addOperand (multOperand (level1Expr (primary (unsignedArithmeticConstant 1))))))))))))))) )))))))) + (addOperand (multOperand (level1Expr (primary (nameDataRef fibonacci (complexDataRefTail (sectionSubscriptRef ( (sectionSubscriptList (sectionSubscript (expression (level5Expr (equivOperand (orOperand (andOperand (level4Expr (level3Expr (level2Expr (addOperand (multOperand (level1Expr (primary (nameDataRef n))))) - (addOperand (multOperand (level1Expr (primary (unsignedArithmeticConstant 2))))))))))))))) )))))))))))))))))))))) (endIfStmt endif))))) (endFunctionStmt end function fibonacci)))))) (endModuleStmt end module fibonacci_module)))) \u003cEOF\u003e)",
  "tokenStartNumber": 0,
  "lexerClassName": "Fortran90Lexer",
  "endLineNumber": 17,
  "tokensString": "[@0,0:5\u003d\u0027module\u0027,\u003c3\u003e,1:0]\n[@1,6:6\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,1:6]\n[@2,7:22\u003d\u0027fibonacci_module\u0027,\u003c189\u003e,1:7]\n[@3,23:26\u003d\u0027\\n\\n  \u0027,\u003c119\u003e,channel\u003d1,1:23]\n[@4,27:34\u003d\u0027implicit\u0027,\u003c41\u003e,3:2]\n[@5,35:35\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,3:10]\n[@6,36:39\u003d\u0027none\u0027,\u003c42\u003e,3:11]\n[@7,40:42\u003d\u0027\\n  \u0027,\u003c119\u003e,channel\u003d1,3:15]\n[@8,43:50\u003d\u0027contains\u0027,\u003c2\u003e,4:2]\n[@9,51:54\u003d\u0027\\n\\n  \u0027,\u003c119\u003e,channel\u003d1,4:10]\n[@10,55:63\u003d\u0027recursive\u0027,\u003c1\u003e,6:2]\n[@11,64:64\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,6:11]\n[@12,65:72\u003d\u0027function\u0027,\u003c7\u003e,6:12]\n[@13,73:73\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,6:20]\n[@14,74:82\u003d\u0027fibonacci\u0027,\u003c189\u003e,6:21]\n[@15,83:83\u003d\u0027(\u0027,\u003c123\u003e,6:30]\n[@16,84:84\u003d\u0027n\u0027,\u003c189\u003e,6:31]\n[@17,85:85\u003d\u0027)\u0027,\u003c128\u003e,6:32]\n[@18,86:86\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,6:33]\n[@19,87:92\u003d\u0027result\u0027,\u003c55\u003e,6:34]\n[@20,93:93\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,6:40]\n[@21,94:94\u003d\u0027(\u0027,\u003c123\u003e,6:41]\n[@22,95:97\u003d\u0027fib\u0027,\u003c189\u003e,6:42]\n[@23,98:98\u003d\u0027)\u0027,\u003c128\u003e,6:45]\n[@24,99:103\u003d\u0027\\n    \u0027,\u003c119\u003e,channel\u003d1,6:46]\n[@25,104:110\u003d\u0027integer\u0027,\u003c169\u003e,7:4]\n[@26,111:111\u003d\u0027,\u0027,\u003c122\u003e,7:11]\n[@27,112:112\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,7:12]\n[@28,113:118\u003d\u0027intent\u0027,\u003c18\u003e,7:13]\n[@29,119:119\u003d\u0027(\u0027,\u003c123\u003e,7:19]\n[@30,120:121\u003d\u0027in\u0027,\u003c19\u003e,7:20]\n[@31,122:122\u003d\u0027)\u0027,\u003c128\u003e,7:22]\n[@32,123:123\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,7:23]\n[@33,124:125\u003d\u0027::\u0027,\u003c30\u003e,7:24]\n[@34,126:126\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,7:26]\n[@35,127:127\u003d\u0027n\u0027,\u003c189\u003e,7:27]\n[@36,128:132\u003d\u0027\\n    \u0027,\u003c119\u003e,channel\u003d1,7:28]\n[@37,133:139\u003d\u0027integer\u0027,\u003c169\u003e,8:4]\n[@38,140:152\u003d\u0027             \u0027,\u003c119\u003e,channel\u003d1,8:11]\n[@39,153:154\u003d\u0027::\u0027,\u003c30\u003e,8:24]\n[@40,155:155\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,8:26]\n[@41,156:158\u003d\u0027fib\u0027,\u003c189\u003e,8:27]\n[@42,159:163\u003d\u0027\\n    \u0027,\u003c119\u003e,channel\u003d1,8:30]\n[@43,164:165\u003d\u0027if\u0027,\u003c51\u003e,9:4]\n[@44,166:166\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,9:6]\n[@45,167:167\u003d\u0027(\u0027,\u003c123\u003e,9:7]\n[@46,168:168\u003d\u0027n\u0027,\u003c189\u003e,9:8]\n[@47,169:169\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,9:9]\n[@48,170:170\u003d\u0027\u003c\u0027,\u003c28\u003e,9:10]\n[@49,171:171\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,9:11]\n[@50,172:172\u003d\u00272\u0027,\u003c187\u003e,9:12]\n[@51,173:173\u003d\u0027)\u0027,\u003c128\u003e,9:13]\n[@52,174:174\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,9:14]\n[@53,175:178\u003d\u0027then\u0027,\u003c52\u003e,9:15]\n[@54,179:185\u003d\u0027\\n      \u0027,\u003c119\u003e,channel\u003d1,9:19]\n[@55,186:188\u003d\u0027fib\u0027,\u003c189\u003e,10:6]\n[@56,189:189\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,10:9]\n[@57,190:190\u003d\u0027\u003d\u0027,\u003c131\u003e,10:10]\n[@58,191:191\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,10:11]\n[@59,192:192\u003d\u0027n\u0027,\u003c189\u003e,10:12]\n[@60,193:197\u003d\u0027\\n    \u0027,\u003c119\u003e,channel\u003d1,10:13]\n[@61,198:201\u003d\u0027else\u0027,\u003c53\u003e,11:4]\n[@62,202:208\u003d\u0027\\n      \u0027,\u003c119\u003e,channel\u003d1,11:8]\n[@63,209:211\u003d\u0027fib\u0027,\u003c189\u003e,12:6]\n[@64,212:212\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,12:9]\n[@65,213:213\u003d\u0027\u003d\u0027,\u003c131\u003e,12:10]\n[@66,214:214\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,12:11]\n[@67,215:223\u003d\u0027fibonacci\u0027,\u003c189\u003e,12:12]\n[@68,224:224\u003d\u0027(\u0027,\u003c123\u003e,12:21]\n[@69,225:225\u003d\u0027n\u0027,\u003c189\u003e,12:22]\n[@70,226:226\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,12:23]\n[@71,227:227\u003d\u0027-\u0027,\u003c132\u003e,12:24]\n[@72,228:228\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,12:25]\n[@73,229:229\u003d\u00271\u0027,\u003c187\u003e,12:26]\n[@74,230:230\u003d\u0027)\u0027,\u003c128\u003e,12:27]\n[@75,231:231\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,12:28]\n[@76,232:232\u003d\u0027+\u0027,\u003c133\u003e,12:29]\n[@77,233:233\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,12:30]\n[@78,234:242\u003d\u0027fibonacci\u0027,\u003c189\u003e,12:31]\n[@79,243:243\u003d\u0027(\u0027,\u003c123\u003e,12:40]\n[@80,244:244\u003d\u0027n\u0027,\u003c189\u003e,12:41]\n[@81,245:245\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,12:42]\n[@82,246:246\u003d\u0027-\u0027,\u003c132\u003e,12:43]\n[@83,247:247\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,12:44]\n[@84,248:248\u003d\u00272\u0027,\u003c187\u003e,12:45]\n[@85,249:249\u003d\u0027)\u0027,\u003c128\u003e,12:46]\n[@86,250:254\u003d\u0027\\n    \u0027,\u003c119\u003e,channel\u003d1,12:47]\n[@87,255:259\u003d\u0027endif\u0027,\u003c54\u003e,13:4]\n[@88,260:262\u003d\u0027\\n  \u0027,\u003c119\u003e,channel\u003d1,13:9]\n[@89,263:265\u003d\u0027end\u0027,\u003c12\u003e,14:2]\n[@90,266:266\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,14:5]\n[@91,267:274\u003d\u0027function\u0027,\u003c7\u003e,14:6]\n[@92,275:275\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,14:14]\n[@93,276:284\u003d\u0027fibonacci\u0027,\u003c189\u003e,14:15]\n[@94,285:286\u003d\u0027\\n\\n\u0027,\u003c119\u003e,channel\u003d1,14:24]\n[@95,287:289\u003d\u0027end\u0027,\u003c12\u003e,16:0]\n[@96,290:290\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,16:3]\n[@97,291:296\u003d\u0027module\u0027,\u003c3\u003e,16:4]\n[@98,297:297\u003d\u0027 \u0027,\u003c119\u003e,channel\u003d1,16:10]\n[@99,298:313\u003d\u0027fibonacci_module\u0027,\u003c189\u003e,16:11]\n[@100,314:314\u003d\u0027\\n\u0027,\u003c119\u003e,channel\u003d1,16:27]\n[@101,315:314\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,17:0]\n",
  "tokenCount": 102,
  "tokens": [
    {
      "type": 3,
      "text": "module",
      "start": 0,
      "stop": 5
    },
    {
      "type": 119,
      "text": " ",
      "start": 6,
      "stop": 6
    },
    {
      "type": 189,
      "text": "fibonacci_module",
      "start": 7,
      "stop": 22
    },
    {
      "type": 119,
      "text": "\n\n  ",
      "start": 23,
      "stop": 26
    },
    {
      "type": 41,
      "text": "implicit",
      "start": 27,
      "stop": 34
    },
    {
      "type": 119,
      "text": " ",
      "start": 35,
      "stop": 35
    },
    {
      "type": 42,
      "text": "none",
      "start": 36,
      "stop": 39
    },
    {
      "type": 119,
      "text": "\n  ",
      "start": 40,
      "stop": 42
    },
    {
      "type": 2,
      "text": "contains",
      "start": 43,
      "stop": 50
    },
    {
      "type": 119,
      "text": "\n\n  ",
      "start": 51,
      "stop": 54
    },
    {
      "type": 1,
      "text": "recursive",
      "start": 55,
      "stop": 63
    },
    {
      "type": 119,
      "text": " ",
      "start": 64,
      "stop": 64
    },
    {
      "type": 7,
      "text": "function",
      "start": 65,
      "stop": 72
    },
    {
      "type": 119,
      "text": " ",
      "start": 73,
      "stop": 73
    },
    {
      "type": 189,
      "text": "fibonacci",
      "start": 74,
      "stop": 82
    },
    {
      "type": 123,
      "text": "(",
      "start": 83,
      "stop": 83
    },
    {
      "type": 189,
      "text": "n",
      "start": 84,
      "stop": 84
    },
    {
      "type": 128,
      "text": ")",
      "start": 85,
      "stop": 85
    },
    {
      "type": 119,
      "text": " ",
      "start": 86,
      "stop": 86
    },
    {
      "type": 55,
      "text": "result",
      "start": 87,
      "stop": 92
    },
    {
      "type": 119,
      "text": " ",
      "start": 93,
      "stop": 93
    },
    {
      "type": 123,
      "text": "(",
      "start": 94,
      "stop": 94
    },
    {
      "type": 189,
      "text": "fib",
      "start": 95,
      "stop": 97
    },
    {
      "type": 128,
      "text": ")",
      "start": 98,
      "stop": 98
    },
    {
      "type": 119,
      "text": "\n    ",
      "start": 99,
      "stop": 103
    },
    {
      "type": 169,
      "text": "integer",
      "start": 104,
      "stop": 110
    },
    {
      "type": 122,
      "text": ",",
      "start": 111,
      "stop": 111
    },
    {
      "type": 119,
      "text": " ",
      "start": 112,
      "stop": 112
    },
    {
      "type": 18,
      "text": "intent",
      "start": 113,
      "stop": 118
    },
    {
      "type": 123,
      "text": "(",
      "start": 119,
      "stop": 119
    },
    {
      "type": 19,
      "text": "in",
      "start": 120,
      "stop": 121
    },
    {
      "type": 128,
      "text": ")",
      "start": 122,
      "stop": 122
    },
    {
      "type": 119,
      "text": " ",
      "start": 123,
      "stop": 123
    },
    {
      "type": 30,
      "text": "::",
      "start": 124,
      "stop": 125
    },
    {
      "type": 119,
      "text": " ",
      "start": 126,
      "stop": 126
    },
    {
      "type": 189,
      "text": "n",
      "start": 127,
      "stop": 127
    },
    {
      "type": 119,
      "text": "\n    ",
      "start": 128,
      "stop": 132
    },
    {
      "type": 169,
      "text": "integer",
      "start": 133,
      "stop": 139
    },
    {
      "type": 119,
      "text": "             ",
      "start": 140,
      "stop": 152
    },
    {
      "type": 30,
      "text": "::",
      "start": 153,
      "stop": 154
    },
    {
      "type": 119,
      "text": " ",
      "start": 155,
      "stop": 155
    },
    {
      "type": 189,
      "text": "fib",
      "start": 156,
      "stop": 158
    },
    {
      "type": 119,
      "text": "\n    ",
      "start": 159,
      "stop": 163
    },
    {
      "type": 51,
      "text": "if",
      "start": 164,
      "stop": 165
    },
    {
      "type": 119,
      "text": " ",
      "start": 166,
      "stop": 166
    },
    {
      "type": 123,
      "text": "(",
      "start": 167,
      "stop": 167
    },
    {
      "type": 189,
      "text": "n",
      "start": 168,
      "stop": 168
    },
    {
      "type": 119,
      "text": " ",
      "start": 169,
      "stop": 169
    },
    {
      "type": 28,
      "text": "\u003c",
      "start": 170,
      "stop": 170
    },
    {
      "type": 119,
      "text": " ",
      "start": 171,
      "stop": 171
    },
    {
      "type": 187,
      "text": "2",
      "start": 172,
      "stop": 172
    },
    {
      "type": 128,
      "text": ")",
      "start": 173,
      "stop": 173
    },
    {
      "type": 119,
      "text": " ",
      "start": 174,
      "stop": 174
    },
    {
      "type": 52,
      "text": "then",
      "start": 175,
      "stop": 178
    },
    {
      "type": 119,
      "text": "\n      ",
      "start": 179,
      "stop": 185
    },
    {
      "type": 189,
      "text": "fib",
      "start": 186,
      "stop": 188
    },
    {
      "type": 119,
      "text": " ",
      "start": 189,
      "stop": 189
    },
    {
      "type": 131,
      "text": "\u003d",
      "start": 190,
      "stop": 190
    },
    {
      "type": 119,
      "text": " ",
      "start": 191,
      "stop": 191
    },
    {
      "type": 189,
      "text": "n",
      "start": 192,
      "stop": 192
    },
    {
      "type": 119,
      "text": "\n    ",
      "start": 193,
      "stop": 197
    },
    {
      "type": 53,
      "text": "else",
      "start": 198,
      "stop": 201
    },
    {
      "type": 119,
      "text": "\n      ",
      "start": 202,
      "stop": 208
    },
    {
      "type": 189,
      "text": "fib",
      "start": 209,
      "stop": 211
    },
    {
      "type": 119,
      "text": " ",
      "start": 212,
      "stop": 212
    },
    {
      "type": 131,
      "text": "\u003d",
      "start": 213,
      "stop": 213
    },
    {
      "type": 119,
      "text": " ",
      "start": 214,
      "stop": 214
    },
    {
      "type": 189,
      "text": "fibonacci",
      "start": 215,
      "stop": 223
    },
    {
      "type": 123,
      "text": "(",
      "start": 224,
      "stop": 224
    },
    {
      "type": 189,
      "text": "n",
      "start": 225,
      "stop": 225
    },
    {
      "type": 119,
      "text": " ",
      "start": 226,
      "stop": 226
    },
    {
      "type": 132,
      "text": "-",
      "start": 227,
      "stop": 227
    },
    {
      "type": 119,
      "text": " ",
      "start": 228,
      "stop": 228
    },
    {
      "type": 187,
      "text": "1",
      "start": 229,
      "stop": 229
    },
    {
      "type": 128,
      "text": ")",
      "start": 230,
      "stop": 230
    },
    {
      "type": 119,
      "text": " ",
      "start": 231,
      "stop": 231
    },
    {
      "type": 133,
      "text": "+",
      "start": 232,
      "stop": 232
    },
    {
      "type": 119,
      "text": " ",
      "start": 233,
      "stop": 233
    },
    {
      "type": 189,
      "text": "fibonacci",
      "start": 234,
      "stop": 242
    },
    {
      "type": 123,
      "text": "(",
      "start": 243,
      "stop": 243
    },
    {
      "type": 189,
      "text": "n",
      "start": 244,
      "stop": 244
    },
    {
      "type": 119,
      "text": " ",
      "start": 245,
      "stop": 245
    },
    {
      "type": 132,
      "text": "-",
      "start": 246,
      "stop": 246
    },
    {
      "type": 119,
      "text": " ",
      "start": 247,
      "stop": 247
    },
    {
      "type": 187,
      "text": "2",
      "start": 248,
      "stop": 248
    },
    {
      "type": 128,
      "text": ")",
      "start": 249,
      "stop": 249
    },
    {
      "type": 119,
      "text": "\n    ",
      "start": 250,
      "stop": 254
    },
    {
      "type": 54,
      "text": "endif",
      "start": 255,
      "stop": 259
    },
    {
      "type": 119,
      "text": "\n  ",
      "start": 260,
      "stop": 262
    },
    {
      "type": 12,
      "text": "end",
      "start": 263,
      "stop": 265
    },
    {
      "type": 119,
      "text": " ",
      "start": 266,
      "stop": 266
    },
    {
      "type": 7,
      "text": "function",
      "start": 267,
      "stop": 274
    },
    {
      "type": 119,
      "text": " ",
      "start": 275,
      "stop": 275
    },
    {
      "type": 189,
      "text": "fibonacci",
      "start": 276,
      "stop": 284
    },
    {
      "type": 119,
      "text": "\n\n",
      "start": 285,
      "stop": 286
    },
    {
      "type": 12,
      "text": "end",
      "start": 287,
      "stop": 289
    },
    {
      "type": 119,
      "text": " ",
      "start": 290,
      "stop": 290
    },
    {
      "type": 3,
      "text": "module",
      "start": 291,
      "stop": 296
    },
    {
      "type": 119,
      "text": " ",
      "start": 297,
      "stop": 297
    },
    {
      "type": 189,
      "text": "fibonacci_module",
      "start": 298,
      "stop": 313
    },
    {
      "type": 119,
      "text": "\n",
      "start": 314,
      "stop": 314
    },
    {
      "type": -1,
      "text": "\u003cEOF\u003e",
      "start": 315,
      "stop": 314
    }
  ],
  "startLineNumber": 1,
  "parserClassName": "Fortran90Parser"
}